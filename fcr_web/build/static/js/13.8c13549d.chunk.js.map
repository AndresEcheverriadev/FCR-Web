{"version":3,"sources":["../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js","../node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/qrcode.react/lib/esm/index.js"],"names":["scrollbarSize_size","scrollbarSize","recalc","canUseDOM","scrollDiv","document","createElement","style","position","top","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","esm_useCommittedRef","value","ref","Object","react","current","useEventCallback","fn","apply","arguments","useWillUnmount","onUnmount","valueRef","useUpdatedRef","activeElement","doc","ownerDocument","active","nodeName","e","contains","context","node","compareDocumentPosition","OPEN_DATA_ATTRIBUTE","property","concat","esm_ModalManager","[object Object]","handleContainerOverflow","isRTL","length","undefined","this","modals","window","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","_modal","containerState","paddingProp","container","getElement","scrollBarWidth","parseInt","css","setAttribute","forEach","m","remove","removeAttribute","assign","modal","modalIdx","indexOf","push","setModalAttributes","state","getScrollbarWidth","setContainerStyle","splice","removeContainerStyle","removeModalAttributes","Context","Provider","useWindow","resolveContainerRef","getBoundingClientRect","esm_NoopTransition","_ref","children","in","inProp","onExited","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","combinedRef","useMergedRefs","child","ImperativeTransition","_ref2","onEntered","transition","exited","setExited","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","error","renderTransition","Component","runTransition","props","jsx_runtime","_excluded","manager","useModalManager","provided","modalManager","getManager","dialog","backdrop","add","isTopModal","setDialogRef","setBackdropRef","Modal","show","role","className","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","mounted","useMounted","prevShow","usePrevious","lastFocusRef","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","aria-modal","tabIndex","appear","backdropElement","onClick","react_dom_default","a","createPortal","displayName","esm_Modal","Manager","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","FIXED_CONTENT","STICKY_CONTENT","NAVBAR_TOGGLER","BootstrapModalManager_BootstrapModalManager","prop","adjust","actual","dataset","parseFloat","super","classList","baseVal","hasClass","marginProp","el","adjustAndStore","restore","sharedManager","fadeStyles","Transition","Fade","transitionClasses","timeout","handleEnter","isAppearing","triggerBrowserReflow","TransitionWrapper","addEndListener","transitionEndListener","childRef","status","innerProps","classnames_default","esm_Fade","rHyphen","pascalCase","str","toUpperCase","string","_","chr","camelize","createWithBsPrefix","prefix","defaultProps","BsComponent","bsPrefix","as","Tag","componentProps","resolvedPrefix","ThemeProvider","ModalBody","esm_ModalContext","ModalDialog","contentClassName","centered","size","fullscreen","scrollable","dialogClass","fullScreenClass","esm_ModalDialog","ModalFooter","propTypes","aria-label","prop_types_default","func","variant","oneOf","CloseButton","ariaLabel","type","esm_CloseButton","esm_AbstractModalHeader","closeLabel","closeVariant","closeButton","handleClick","ModalHeader","esm_ModalHeader","ModalTitle","p","DialogTransition","BackdropTransition","Modal_Modal","dialogClassName","dialogAs","Dialog","aria-labelledby","ariaLabelledby","aria-describedby","ariaDescribedby","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","mergedRef","modalContext","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","preventDefault","addEventListener","onMouseUp","onMouseDown","__webpack_exports__","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION","useButtonProps","tagName","disabled","href","rel","meta","event","trim","isTrivialHref","stopPropagation","aria-disabled","onKeyDown","Button","asProp","buttonProps","Button_Button","global","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","isReactNative","navigator","product","isDOM","d","QRCode","qrcodegen","react__WEBPACK_IMPORTED_MODULE_0___default","n","__defProp","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","enumerable","configurable","writable","__spreadValues","b","__objRest","exclude","qrcodegen2","_QrCode","version","errorCorrectionLevel","dataCodewords","msk","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","text","ecl","segs","QrSegment","makeSegments","encodeSegments","data","seg","makeBytes","dataUsedBits","minVersion","maxVersion","boostEcl","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","min","padByte","x","y","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","max","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","result","block","right","vert","invert","Error","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","reduce","sum","total","ceil","PENALTY_N4","step","pos","degree","root","reedSolomonMultiply","divisor","map","factor","shift","coef","z","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","digits","isNumeric","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","QRCodeCanvas","_a","level","bgColor","fgColor","otherProps","imgSrc","src","_canvas","_image","isImgLoaded","setIsImageLoaded","canvas","ctx","getContext","encodeText","getModules","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","onLoad","Fragment","QRCodeSVG","xlinkHref","preserveAspectRatio","fgPath","viewBox","shapeRendering","renderAs"],"mappings":"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","file":"static/js/13.8c13549d.chunk.js","sourcesContent":["import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n  return size;\n}","import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\n\nexport default function useWillUnmount(fn) {\n  var onUnmount = useUpdatedRef(fn);\n  useEffect(function () {\n    return function () {\n      return onUnmount.current();\n    };\n  }, []);\n}","import { useRef } from 'react';\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\n\nexport default function useUpdatedRef(value) {\n  var valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor() {\n    let {\n      ownerDocument,\n      handleContainerOverflow = true,\n      isRTL = false\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = \"\".concat(parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth, \"px\");\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","export const ATTRIBUTE_PREFIX = \"data-rr-ui-\";\nexport const PROPERTY_PREFIX = \"rrUi\";\nexport function dataAttr(property) {\n  return \"\".concat(ATTRIBUTE_PREFIX).concat(property);\n}\nexport function dataProp(property) {\n  return \"\".concat(PROPERTY_PREFIX).concat(property);\n}","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth() {\n  let ownerDocument = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : document;\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition(_ref) {\n  let {\n    children,\n    in: inProp,\n    onExited,\n    mountOnEnter,\n    unmountOnExit\n  } = _ref;\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition(_ref) {\n  let {\n    in: inProp,\n    onTransition\n  } = _ref;\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition(_ref2) {\n  let {\n    children,\n    in: inProp,\n    onExited,\n    onEntered,\n    transition\n  } = _ref2;\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = function () {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...arguments);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: \"\".concat(parseFloat(css(element, prop)) + adjust, \"px\")\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    children,\n    transitionClasses = {},\n    onEnter,\n    ...rest\n  } = _ref;\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix) {\n  let {\n    displayName = pascalCase(prefix),\n    Component,\n    defaultProps\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const BsComponent = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n    let {\n      className,\n      bsPrefix,\n      as: Tag = Component || 'div',\n      ...props\n    } = _ref;\n    const componentProps = {\n      ...defaultProps,\n      ...props\n    };\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...componentProps\n    });\n  });\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-body');","import * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    contentClassName,\n    centered,\n    size,\n    fullscreen,\n    children,\n    scrollable,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = \"\".concat(bsPrefix, \"-dialog\");\n  const fullScreenClass = typeof fullscreen === 'string' ? \"\".concat(bsPrefix, \"-fullscreen-\").concat(fullscreen) : \"\".concat(bsPrefix, \"-fullscreen\");\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && \"\".concat(bsPrefix, \"-\").concat(size), centered && \"\".concat(dialogClass, \"-centered\"), scrollable && \"\".concat(dialogClass, \"-scrollable\"), fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(\"\".concat(bsPrefix, \"-content\"), contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('modal-footer');","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    className,\n    variant,\n    'aria-label': ariaLabel = 'Close',\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsx(\"button\", {\n    ref: ref,\n    type: \"button\",\n    className: classNames('btn-close', variant && \"btn-close-\".concat(variant), className),\n    \"aria-label\": ariaLabel,\n    ...props\n  });\n});\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    closeLabel = 'Close',\n    closeVariant,\n    closeButton = false,\n    onHide,\n    children,\n    ...props\n  } = _ref;\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    closeLabel = 'Close',\n    closeButton = false,\n    ...props\n  } = _ref;\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nconst DivStyledAsH4 = divWithClassName('h4');\nexport default createWithBsPrefix('modal-title', {\n  Component: DivStyledAsH4\n});","import classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    bsPrefix,\n    className,\n    style,\n    dialogClassName,\n    contentClassName,\n    children,\n    dialogAs: Dialog = ModalDialog,\n    'aria-labelledby': ariaLabelledby,\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    /* BaseModal props */\n\n    show = false,\n    animation = true,\n    backdrop = true,\n    keyboard = true,\n    onEscapeKeyDown,\n    onShow,\n    onHide,\n    container,\n    autoFocus = true,\n    enforceFocus = true,\n    restoreFocus = true,\n    restoreFocusOptions,\n    onEntered,\n    onExit,\n    onExiting,\n    onEnter,\n    onEntering,\n    onExited,\n    backdropClassName,\n    manager: propsManager,\n    ...props\n  } = _ref;\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(\"\".concat(bsPrefix, \"-backdrop\"), backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && \"\".concat(bsPrefix, \"-static\"), !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps(_ref2) {\n  let {\n    tagName,\n    disabled,\n    href,\n    target,\n    rel,\n    role,\n    onClick,\n    tabIndex = 0,\n    type\n  } = _ref2;\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as,\n    bsPrefix,\n    variant = 'primary',\n    size,\n    active = false,\n    disabled = false,\n    className,\n    ...props\n  } = _ref;\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && \"\".concat(prefix, \"-\").concat(variant), size && \"\".concat(prefix, \"-\").concat(size), props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n(qrcodegen2 => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION) throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7) throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++) row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl) {\n      let minVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n      let maxVersion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 40;\n      let mask = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : -1;\n      let boostEcl = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7) throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion;; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion) throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8) ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData()) bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17) appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length) dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0)) this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++) rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++) this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++) this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++) this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++) this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7) return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++) rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size) this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++) this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl)) throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks) dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks) result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8)) throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6) right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7) throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert) this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5) result += _QrCode.PENALTY_N1;else if (runX > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor) result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5) result += _QrCode.PENALTY_N1;else if (runY > 5) result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor) result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1]) result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules) dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1) return [];else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step) result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION) throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7) result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255) throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++) result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length) result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map(_ => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0) throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0) currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [[-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28], [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30], [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [[-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25], [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49], [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68], [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0) throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--) bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond) throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0) throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data) appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits)) throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length;) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text)) throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length) appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\") return [];else if (_QrSegment.isNumeric(text)) return [_QrSegment.makeNumeric(text)];else if (_QrSegment.isAlphanumeric(text)) return [_QrSegment.makeAlphanumeric(text)];else return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0) throw new RangeError(\"ECI assignment value out of range\");else if (assignVal < 1 << 7) appendBits(assignVal, 8, bb);else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits) return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\") result.push(str.charCodeAt(i));else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n(qrcodegen2 => {\n  let QrCode;\n  (QrCode2 => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n(qrcodegen2 => {\n  let QrSegment;\n  (QrSegment2 => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules) {\n  let margin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  const ops = [];\n  modules.forEach(function (row, y) {\n    let start = null;\n    row.forEach(function (cell, x) {\n      if (!cell && start !== null) {\n        ops.push(\"M\".concat(start + margin, \" \").concat(y + margin, \"h\").concat(x - start, \"v1H\").concat(start + margin, \"z\"));\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(\"M\".concat(x + margin, \",\").concat(y + margin, \" h1v1H\").concat(x + margin, \"z\"));\n        } else {\n          ops.push(\"M\".concat(start + margin, \",\").concat(y + margin, \" h\").concat(x + 1 - start, \"v1H\").concat(start + margin, \"z\"));\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = {\n      x: floorX,\n      y: floorY,\n      w: ceilW,\n      h: ceilH\n    };\n  }\n  return {\n    x,\n    y,\n    h,\n    w,\n    excavation\n  };\n}\nvar SUPPORTS_PATH2D = function () {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props,\n    {\n      value,\n      size = DEFAULT_SIZE,\n      level = DEFAULT_LEVEL,\n      bgColor = DEFAULT_BGCOLOR,\n      fgColor = DEFAULT_FGCOLOR,\n      includeMargin = DEFAULT_INCLUDEMARGIN,\n      style,\n      imageSettings\n    } = _a,\n    otherProps = __objRest(_a, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"style\", \"imageSettings\"]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function (row, rdx) {\n          row.forEach(function (cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({\n    height: size,\n    width: size\n  }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: {\n        display: \"none\"\n      },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props,\n    {\n      value,\n      size = DEFAULT_SIZE,\n      level = DEFAULT_LEVEL,\n      bgColor = DEFAULT_BGCOLOR,\n      fgColor = DEFAULT_FGCOLOR,\n      includeMargin = DEFAULT_INCLUDEMARGIN,\n      imageSettings\n    } = _a,\n    otherProps = __objRest(_a, [\"value\", \"size\", \"level\", \"bgColor\", \"fgColor\", \"includeMargin\", \"imageSettings\"]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: \"0 0 \".concat(numCells, \" \").concat(numCells)\n  }, otherProps), /* @__PURE__ */React.createElement(\"path\", {\n    fill: bgColor,\n    d: \"M0,0 h\".concat(numCells, \"v\").concat(numCells, \"H0z\"),\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = props => {\n  const _a = props,\n    {\n      renderAs\n    } = _a,\n    otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport { QRCodeCanvas, QRCodeSVG, QRCode as default };"],"sourceRoot":""}